@using Model;
@using System.Net.Http;
@inject HttpClient Http

<div class="section">
    <div class="professional-profile">
        <TitleComponent Title="Professional Profile"></TitleComponent>
        <div class="professional-content">
            @ProfessionalProfile
        </div>
    </div>
    <div class="tools">
        <TitleComponent Title="Tools"></TitleComponent>
        <div class="tool-logos">
            @foreach (Tool tool in ToolsWithLogoUrls.Take(4))
            {
                <div class="tool-logo">
                    <img src="@tool.LogoUrl" class="logo">
                    <p>@tool.Name</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? ProfessionalProfile { get; set; }
    [Parameter]
    public List<Tool>? Tools { get; set; }

    public List<Tool> ToolsWithLogoUrls { get; set; } = new List<Tool>();

    protected override async Task OnInitializedAsync()
    {
        foreach (var tool in Tools)
        {
            tool.LogoUrl = await GetLogoUrl(tool.LogoUrl);
            ToolsWithLogoUrls.Add(tool);
        }
        await base.OnInitializedAsync();
    }

    private async Task<string> GetLogoUrl(string logoUrl)
    {
        string baseLogoUrl = logoUrl.EndsWith(".webp") || logoUrl.EndsWith(".png") ? logoUrl.Substring(0, logoUrl.LastIndexOf('.')) : logoUrl;

        string webpUrl = baseLogoUrl + ".webp";
        string pngUrl = baseLogoUrl + ".png";

        // Intenta obtener el archivo con la extensión .webp
        var responseWebp = await Http.GetAsync(webpUrl);
        if (responseWebp.IsSuccessStatusCode)
        {
            return webpUrl; // Si existe, retorna la URL con la extensión .webp
        }

        // Intenta obtener el archivo con la extensión .png
        var responsePng = await Http.GetAsync(pngUrl);
        if (responsePng.IsSuccessStatusCode)
        {
            return pngUrl; // Si existe, retorna la URL con la extensión .png
        }

        // Si ambas extensiones fallan, puedes manejar el error como prefieras
        return "favicon.png";
    }

}
